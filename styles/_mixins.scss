// FLEX

@mixin flex-container(
  $direction: row,
  $justify: flex-start,
  $align: center,
  $wrap: nowrap,
  $gap: 0
) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-flow: $direction $wrap;
  gap: $gap;
}

@mixin flex-item($grow: 0, $shrink: 1, $basis: auto) {
  flex: $grow $shrink $basis;
}

@mixin flex-row-center {
  @include flex-container(row, center, center);
}

@mixin flex-column-start {
   @include flex-container(column, flex-start, flex-start);
}

@mixin flex-column-center {
  @include flex-container(column, center, center);
}

@mixin flex-space-around {
  @include flex-container(row, space-around);
}

@mixin flex-end {
  @include flex-container(row, flex-end);
}

@mixin flex-start {
  @include flex-container(row, flex-start);
}

// GRID

@mixin grid-container(
  $columns: null,
  $rows: null,
  $gap: 0,
  $justify: stretch,
  $align: stretch
) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
  place-items: $align $justify;
}

@mixin grid-item(
  $column-start: auto,
  $column-end: auto,
  $row-start: auto,
  $row-end: auto
) {
  grid-column: $column-start / $column-end;
}

@mixin grid-center {
  @include grid-container(1fr, 1fr, 0, center, center);
  place-content: center;
}

@mixin grid-span-all($span: all) {
  grid-column: 1 / -1;
  @if $span == 'rows' {
    grid-row: 1 / -1;
  }
}

@mixin responsive-grid($cols: 12, $gap: 0) {
  @include grid-container(repeat($cols, 1fr), auto, $gap);
}

// COLORS

@mixin text-color($color, $opacity: 1) {
  color: rgba($color, $opacity);
}

@mixin bg-color($color, $opacity: 1) {
  background: rgba($color, $opacity);
}

@mixin border($color, $width: 1px) {
  border: $width solid rgb($color);
}

// SIZE

@function remUnit($size) {
  @return calc($size / 16px) * 1rem;
}